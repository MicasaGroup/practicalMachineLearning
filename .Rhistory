install.packages("KernSmooth")
library(KernSmooth)
source('~/git/ProgrammingAssignment2/cachematrix.R')
m<-makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(m)
cacheSolve(m)
m$set(matrix(c(1,2,3,6,5,4,9,7,8),3,3,byrow=T))
cacheSolve(m)
cacheSolve(m)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4),nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
amatrix$set(matrix(c(0,5,99,66),nrow=2,ncol=2))
cacheSolve(amatrix)
amatrix$get
amatrix$get()
amatrix$getinverse()
source('~/git/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4),nrow=2, ncol=2))
cacheSolve(amatrix)
cacheSolve(amatrix)
?bz2file
?bzfile
stormDataUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
bzip2temp <- tempfile()
download.file(stormDataUrl, bzip2temp, method="curl")
rawStormData <- read.csv(bzfile(bzip2temp, "r"), "StormData.csv")
rawStormData <- read.csv(bzip2temp, "StormData.csv")
library(R.utils)
rawStormData <- read.csv(bzip2temp, "StormData.csv")
rawStormData <- read.csv(bz2unzip(bzip2temp), "StormData.csv")
rawStormData <- read.csv(bzip2temp)
library(datasets)
data(ToothGrowth)
h1 <- subset(ToothGrowth, dose==2.0)
t.test(len~sup, paired=FALSE, var.equal=TRUE, data=h1)
t.test(len~supp, paired=FALSE, var.equal=TRUE, data=h1)
t.test(len~supp, paired=FALSE, var.equal=FALSE, data=h1)
26.06 - 26.14
h1
h1o <- subset(h1, supp=='OJ')
h1v <- subset(h1, supp=='VC')
h1o
h1v
mean(h1o$len)
mean(h1v$len)
sd(h1o$len)
2.665^2
var(h1o$len)
2.655058^2
var(h2o$len)
var(h1v$len)
sd(h1v$len)
var(h1v$len)
?tq
?qt
qt(0.95,df=9)
sqrt(var(h1v$len)/10+var(h1o$len)/10)
sqrt(var(h1v$len)/10+var(h1o$len)/10) * qt(95,df=9)
sqrt(var(h1v$len)/10+var(h1o$len)/10) * qt(0.95,df=9)
sqrt(var(h1v$len)/20+var(h1o$len)/20) * qt(0.95,df=19)
sqrt(var(h1v$len)/10+var(h1o$len)/10) * qt(0.95,df=19)
sqrt(var(h1v$len)/10+var(h1o$len)/10) * qt(95,df=9) + 0.08
sqrt(var(h1v$len)/10+var(h1o$len)/10) * qt(0.95,df=9) + 0.08
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=ToothGrowth)
sqrt(var(h1v$len)/20+var(h1o$len)/20) * qt(0.95,df=19)
mean(h1o$len) - mean(h1v$len) + c(-1,1) *(sqrt(var(h1v$len)/20+var(h1o$len)/20) * qt(0.95,df=19))
h1 <- subset(ToothGrowth, dose==2.0)
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=h1)
h2 <- subset(ToothGrowth, dose==1.0)
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=h2)
h3 <- subset(ToothGrowth, dose==0.5)
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=h3)
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=ToothGrowth)
h5 <- subset(ToothGrowth, dose==0.5 || dose==1.0)
h5
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h5)
h5$dose <- as.factor(h5$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h5)
str(h5)
h5 <- filter(ToothGrowth, dose==0.5 || dose==1.0) %>% select(dose,len)
library(dplyr)
h5 <- filter(ToothGrowth, dose==0.5 || dose==1.0) %>% select(dose,len)
h5$dose <- as.factor(h5$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h5)
h5
str(h5)
h5 <- filter(ToothGrowth, dose==0.5 | dose==1.0) %>% select(dose,len)
h5$dose <- as.factor(h5$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h5)
h6 <- filter(ToothGrowth, dose==1.0 | dose==2.0) %>% select(dose,len)
h6$dose <- as.factor(h6$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h6)
h7 <- filter(ToothGrowth, dose==0.5 | dose==2.0) %>% select(dose,len)
h7$dose <- as.factor(h7$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h7)
?ToothGrowth
h2 <- subset(ToothGrowth, dose==1.0)
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=h2)
h3 <- subset(ToothGrowth, dose==0.5)
t.test(len~supp,paired=FALSE, var.equal=FALSE, data=h3)
h4 <- filter(ToothGrowth, dose==0.5 | dose==1.0) %>% select(dose,len)
h4$dose <- as.factor(h4$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h4)
h5 <- filter(ToothGrowth, dose==1.0 | dose==2.0) %>% select(dose,len)
h5$dose <- as.factor(h5$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h5)
h6 <- filter(ToothGrowth, dose==0.5 | dose==2.0) %>% select(dose,len)
h6$dose <- as.factor(h6$dose)
t.test(len~dose,paired=FALSE, var.equal=FALSE, data=h6)
baseline <- c(140,138,150,148,135)
week2 <- c(132,135,151,146,130)
?t.test
t.test(x=baseline,y=week2, paired=TRUE)
?qt
1100 + c(-1,1)*qt(0.95,df=8,lower.tail=TRUE)
1100 + c(-1,1)*qt(0.95,df=8,lower.tail=TRUE)*30
1100 + c(-1,1)*qt(0.95,df=8,lower.tail=TRUE) * 30 /sqrt(9)
?pt
dt(x=0.75, df=3)
?bnorm
?pbinom
pbinom(2,size=4,prob=0.5,lower.tail=FALSE)
pbinom(9,prob=178.7,lower.tail=FALSE)
?ppois
ppois(10,lambda=0.01*1787,lower.tail=FALSE)
ppois(10,lambda=178.7,lower.tail=FALSE)
ppois(10,lambda=17.87,lower.tail=FALSE)
ppois(10-1,lambda=17.87,lower.tail=FALSE)
ppois(10-1,lambda=17.87)
?pt
mt=-3
st=1.5
nt=9
mp=1
sp=1.8
np=9
pooledsd=sqrt(((nt-1)*st^2 + (np-1)*sp^2))/(nt+np-2))
pooledsd=sqrt((nt-1)*st^2 + (np-1)*sp^2))/(nt+np-2))
pooledsd=sqrt((nt-1)*st^2 + (np-1)*sp^2)/(nt+np-2))
pooledvar= ((8*1.5^2) + (8*1.8^2))/16
pooledvar
pooledsd = sqrt(pooledvar)
pooledsd
se = pooledsd * sqrt(1/9 + 1/9)
t = (mt - mp)/se
pt(t)
pt(t,df=17)
options(scipen,999)
pt(t,df=17,lower.tail=FALSE)
pt(t,df=17) * 2
pt(t,df=17)
alpha = 0.05
z = qnorm(1-alpha)
n = 100
sigma = 0.04
mu0 =0
mua = 0.01
pnorm(mu0 + z * sigma/sqrt(n),mean=mu0,sd=sigma/sqrt(n), lower.tail=FALSE)
pnorm(mu0 + z * sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n), lower.tail=FALSE)
n=500
pnorm(mu0 + z * sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n), lower.tail=FALSE)
n=250
pnorm(mu0 + z * sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n), lower.tail=FALSE)
n=125
pnorm(mu0 + z * sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n), lower.tail=FALSE)
n=140
pnorm(mu0 + z * sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n), lower.tail=FALSE)
n=160
pnorm(mu0 + z * sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n), lower.tail=FALSE)
n=9
mu0=1100
sd=30
?qt
mu0 + c(-1,1) * qt(0.95, df=n-1, lower.tail=TRUE) * sd/sqrt(n)
mu0 + c(-1,1) * qt(0.975, df=n-1) * sd/sqrt(n)
lambda = (1/100) * 1787/100
lambda
ppois(10-1,lambda=lambda,lower.tail=FALSE)
options(scipen=999)
ppois(10-1,lambda=lambda,lower.tail=FALSE)
lambda = 1787/100
lambda
ppois(10-1,lambda=lambda,lower.tail=FALSE)
ppois(10-1,lambda=lambda)
?ppois
ppois(10-1,lambda=lambda,lower.tail=FALSE)
ppois(10-1,lambda=lambda)*2
n=18
mt=-3
mp=1
sdt=1.5
sdp=1.8
sddif = sqrt(sdt^2/9 + sdp^2/9)
mdif = mt-mp
mdif
se = sddif * sqrt(1/9 + 1/9)
t = mdif/se
t
pt(t)
pt(t,df=n-1)
pt(t,df=n-1)*2
n=9
mu0=1078
?t
?qt
qt(0.95,df=n-1,lower.tail=TRUE)
pt(0.95,df=n-1,lower.tail=TRUE)
pt(0.975,df=n-1)
mu = (1123-1077)/2
mu
mu = (1123+1077)/2
mu
t = qt(0.95,df=8)
t
sd = (1123-1100)/t
sd
mu0 = 1078
mua = 1100
power.t.test(n=n, delta=(mu0-mua),sd=sd,alt="two.sided")$power
library(swirl)
swirl()
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(chid ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coe[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dis, attenu)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(gpa_nor, gch_nor)
l_nor <- lm(gpa_nor~ gch_nor)
l_nor <- lm(gpa_nor ~ gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child~parent, galton)
sqrt(sum(lm$residuals)/n-2)
sqrt(sum(lm$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
sRes <- sum(deviance(fit))
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child^2,galton$parent^2)
cor(galton$parent,galton$child)^2
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2,1,3,1)
lsfit <- lsfit(x=x,wt=w)
summary(lm(x,w))
summary(lm(x~w))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(x~y)
summary(fit)
data(mtcars)
fit <- lm(weight~mpg,mtcars)
str(mtcars)
fit <- lm(wtt~mpg,mtcars)
fit <- lm(wt~mpg,mtcars)
summary(fit)
fit <- lm(mpg~wt,mtcars)
summary(fit)
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
x <- c(8.58,10.46,9.01,9.64,8.86)
normalize.vector(x)
library(ppls)
packages.install("ppls")
install.packages("ppls")
library(ppls)
normalize.vector(x)
x
scale(x)
x <- c(0.8,0.47,0.51,0.73,0.36,0.58,0.57,0.85,0.44,0.42)
y <- c(1.39,0.72,1.55,0.48,1.19,-1.59,1.23,-0.65,1.49,0.05)
fit <- lm(x,y)
?lm
fit <- lm(x~y)
summary(fit)
fit <- lm(y~x)
summary(fit)
x<- c(0.8,0.47,0.51,0.73,0.36,0.58,0.57,0.85,0.44,0.42)
mean(x)
x<- c(0.18,-1.54,0.42,0.95)
w<- c(2,1,3,1)
mean(x*w)
x*w
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36,0.58,0.57,0.85,0.44,0.42)
y <- c(1.39,0.72,1.55,0.48,1.19,-1.59,1.23,-0.65,1.49,0.05)
fit <- lm(y~0+x)
summary(fit)
x <- c(0.18,-1.54,0.42,0.95)
w <- c(2,1,3,1)
weighted.mean(x,w)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child~parent, galton)
lm(child~1,galton)
head(trees)
fit <- lm(Volume ~ Girth + Height -1, trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth",trees)
head(trees2)
fit2 <- lm (Volume ~ Height + Constant -1, trees2)
lapply(list(fit,fit2),coef)
swirl()
library(swirl)
ls
rm(list=ls())
swirl()
all <- lm(Fertility ~ Agriculture.Catholic.Education.Examination,swiss)
all <- lm(Fertility ~ Agriculture+Catholic+Education+Examination+Infant.Mortality,swiss)
summary(all)
lm(Fertility~Agriculture,swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination,swiss$Educatin)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ .+ec,swiss)
all - efit
all
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
Fx
sF
InsectSprays[,2]
summary(InsectSprays[,2])
sapply()
sapply(InsectSprays, classes)
sapply(InsectSprays, class)
lm(count ~ spray, InsectSpray)
lm(count ~ spray, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
fit$coef
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA["count"])
mean(sA)
mean(sB)
nfit <- lm(count ~ spray -1,InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, B)
spray2 <- relevel(InsectSprays$spray, sprayB)
spray2 <- relevel(InsectSprays$spray, 'sprayB')
spray2 <- relevel(InsectSprays$spray, 'sprayC')
spray2 <- relevel(InsectSprays$spray, sprayC)
spray2 <- relevel(InsectSprays$spray, "sprayC")
spray2 <- relevel(InsectSprays$spray, as.factor("sprayC")
)
spray2 <- relevel(InsectSprays$spray, 3
)
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count~spray,spray2)
fit2 <- lm(count ~ spray,spray2)
spray2
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
x <- c(0.61,0.93,0.83,0.35,0.54,0.16,0.91,0.62,0.62)
y <- c(0.67,0.84,0.6,0.18,0.85,0.47,1.1,0.65,0.36)
fit <- lm(y ~ x)
fit
fit <- lm(x ~y)
fit
fit <- lm(y~x)
summary(fit)
summary(fit)$sigma
dataset(mtcars)
data(mtcars)
str(mtcars)
fit <- lm(mpg~wt,mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef
sumCoef[2,1] + c(-1,1)*qt(.975, df=fit$df)*sumCoef[2,2]
sumCoef[1,1] + c(-1,1)*qt(.975, df=fit$df)*sumCoef[1,2]
?mtcars
?predict
x <- c(3000)
head(mtcars)
x <- c(3)
newdata <- data.frame(x)
predict(fit, newdata, interval=("confidence"))
predict(fit, newdata, interval=("prediction"))
new.data <- data.frame(wt=c(3))
predict(fit, newdata, interval=("prediction"))
summary(fit)
newdata
predict(fit, new.data, interval=("prediction"))
predict(fit, new.data, interval=("confidence"))
new.data <- data.frame(wt=c(2))
predict(fit, new.data, interval=("confidence"))
summary(lm)
summary(fit)
fit2 <- lm(mpg~I(wt*2),mtcars)
predict(fit2, new.data, interval=("confidence"))
sumCoef2 <- summary(fit2)$coefficients
sumCoef2[2,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[2,2]
sumCoef2
sumCoef2[1,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[1,2]
sumCoef2[2,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[2,2]
fit <- lm(mpg~wt,mtcars)
e <- resid(fit)
e
sum(e)
summary(fit)
fit <- lm(mpg~wt,mtcars)
averageWt <- mean(mtcars$wt)
averageWt
new.data <- data.frame(wt=c(averageWt))
predict(fit,new.data, interval="confidence")
sumCoef2[1,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[1,2]
sumCoef2[2,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[2,2]
(sumCoef2[2,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[2,2])/2
(sumCoef2[1,1] + c(-1,1)*qt(.975, df=fit2$df)*sumCoef2[1,2])/2
library(ggmap)
install.packages("ggmap")
library(ggmap)
library(mapproj)
map <- get_map(location='Wellington', zoom=16)
ggmap(map)
map <- get_map(location='Wellington',zoom=10)
ggmap(map)
map <- get_map(location='Wellington',zoom=12)
ggmap(map)
map <- get_map(location='Wellington',zoom=12,source='osm')
ggmap(map)
library(rworldmap)
install.packages("rworldmap")
library(rworldmap)
newmap <- getMap(resolution="low")
plot(newmap)
library(ggmap)
geocode(c("Cape Reinga, New Zealand"))
nz.limits <- geocode(c("Nugent Island","Jacquemart Island", "Cape Lovitt, Auckland Islands","Chatham Islands"))
nz.limits
plot(newmap, xlim=range(nz.limits$lon),ylim=range(nz.limits$lat),asp=1)
newmap <- getMap(resolution = "low")
plot(newmap, xlim=range(nz.limits$lon),ylim=range(nz.limits$lat),asp=1)
nz.limits <- geocode(c("North Cape, New Zealand","East Cape, New Zealand", "Slope Point, New Zealand", "West Cape, New Zealand"))
nz.limits
plot(newmap, xlim=range(nz.limits$lon),ylim=range(nz.limits$lat),asp=1)
nz.limits <- geocode(c("Surville Cliffs, New Zealand","East Cape, New Zealand", "Slope Point, New Zealand", "West Cape, New Zealand"))
nz.limits
plot(newmap, xlim=range(nz.limits$lon),ylim=range(nz.limits$lat),asp=1)
geocode("5 Manitoba Place, Kingston, Wellington")
geocode("5 Manitoba Place, Wellington")
geocode("9 Manitoba Place, Wellington")
setwd("git")
dir()
library(slidify)
author("practicalMachineLearning")
